plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
   // implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-undertow'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation 'io.quarkus:quarkus-resteasy-reactive-client'
    implementation 'io.quarkus:quarkus-rest-client-jackson' // Optional for JSON parsing
    implementation 'io.quarkus:quarkus-rest-client'


    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-jdbc-h2'
    runtimeOnly 'com.h2database:h2'

    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.1'
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.0'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'

    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'io.quarkus:quarkus-smallrye-jwt'


}

group 'com.example'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
